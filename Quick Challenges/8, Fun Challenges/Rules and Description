For all these problems, put your code in a function with at least 1 argument
To submit your code, create a folder named after you, lie mine would be "Shantanu"
Put each of your solutions in a different file in your folder

1. You are going to be given a word. Your job is to return the middle character of the word. If the word's length is odd, return the middle character. If the word's length is even, return the middle 2 characters.
2. The Collatz Conjecture states that for any positive natural number n, this process: If n is even, divide it by 2. If n is odd, multiply it by 3 and add 1. Repeat until the result hits 1. The result will eventually reach n = 1. For example, if n = 20, the resulting sequence will be: [ 20, 10, 5, 16, 8, 4, 2, 1 ]. In the example above, the output would be 8. Write a program that will output the length of the Collatz Conjecture for any given n.
3. You have to find the factors of integer down to the limit including the limiting number. There will be no negative numbers. Return the result as a list of numbers in ascending order. If the limit is more than the integer, return an empty list. As a challenge, see if you can do it in one line. If you do, then you'll get an extra two tickets.
4. Add two numbers without using the addition or subtraction operator.
5. Clock Angle Problem: Given time in hh:mm format in 24-hour notation, calculate the shorter angle between the hour and minute hand in an analog clock.
6. Swap two numbers without using a third variable.
7. A palindrome is a word, phrase, number, or other sequence of characters which reads the same backward as forward. Examples of numerical palindromes are: 2332, 110011, or 54322345. For a given number num, return its closest numerical palindrome which can either be smaller or larger than num. If there are 2 possible values, the larger value should be returned. If num is a numerical palindrome itself, return it. Also, in this program, single digit numbers are not to be considered numerical palindromes.
8. Your task is to create a function that can take any string and randomly jumble the letters within each word while leaving the first and last letters of the word in place. For example, "mixwords('Winter is coming') // returns 'Wntier is cminog' or 'Wtiner is conimg'" and "mixwords('Hey, friends!') // returns 'Hey, fierdns!' or 'Hey, fernids!'" All punctuation should remain in place. Words smaller than 3 letters should not change. Letters must be randomly moved (and so calling the function multiple times with the same string should return different values. Parameters that are not strings should return undefined.
